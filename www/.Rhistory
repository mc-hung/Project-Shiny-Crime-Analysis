"burglPerPop", "larcPerPop","autoTheftPerPop","arsonsPerPop")]
dataset3 <- dataset2[,
c("householdsize","racepctblack", "racePctWhite", "racePctAsian","racePctHisp",
"medIncome", "NumUnderPov", "PctLess9thGrade", "PctNotHSGrad", "PctBSorMore",
"PctUnemployed","PersPerFam","PctKids2Par", "PctLargHouseFam", "PctNotSpeakEnglWell",
"PctLargHouseOccup","PersPerRentOccHous","PctHousLess3BR","MedNumBR","PctHousNoPhone",
"NumInShelters","PctBornSameState","rapesPerPop","robbPerPop","assaultPerPop",
"burglPerPop", "larcPerPop","autoTheftPerPop","arsonsPerPop")]
View(dataset2)
View(dataset2)
dataset3 <- dataset2[,
c("householdsize","racepctblack", "racePctWhite", "racePctAsian","racePctHisp",
"medIncome", "NumUnderPov", "PctLess9thGrade", "PctNotHSGrad", "PctBSorMore",
"PctUnemployed","PersPerFam","PctKids2Par", "PctLargHouseFam", "PctNotSpeakEnglWell",
"PctLargHouseOccup","PersPerRentOccHous","PctHousLess3BR","MedNumBR","PctHousNoPhone",
"NumInShelters","PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop",
"burglPerPop", "larcPerPop","autoTheftPerPop","arsonsPerPop", "ViolentCrimesPerPop")]
View(dataset3)
for (i in 1:length(dataset3)){
dataset3[,i] = data.frame(apply(dataset3[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset3)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset2, TRUE, lapply(dataset3, NA2mean))
dataset2[] <- lapply(dataset3, NA2mean)
length(dataset2)
set.seed(111)
train_index <- sample(1:nrow(dataset3), 0.8*nrow(dataset3))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d2_norm <- as.data.frame(lapply(dataset3, normalize))
train_lm <- d2_norm[train_index,]
test_lm <- d2_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
rm(dataset3)
dataset3 <- dataset[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","PctKids2Par","PctLargHouseFam",
"PctLargHouseOccup","PctHousLess3BR","MedNumBR","PctHousNoPhone","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop","arsonsPerPop")]
for (i in 1:length(dataset3)){
dataset3[,i] = data.frame(apply(dataset3[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset3)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset2, TRUE, lapply(dataset3, NA2mean))
dataset2[] <- lapply(dataset3, NA2mean)
length(dataset2)
set.seed(111)
train_index <- sample(1:nrow(dataset3), 0.8*nrow(dataset3))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d2_norm <- as.data.frame(lapply(dataset3, normalize))
train_lm <- d2_norm[train_index,]
test_lm <- d2_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
View(dataset3)
dataset3 <- dataset[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","PctKids2Par","PctLargHouseFam",
"PctLargHouseOccup","PctHousLess3BR","MedNumBR","PctHousNoPhone","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop","arsonsPerPop")]
for (i in 1:length(dataset3)){
dataset3[,i] = data.frame(apply(dataset3[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset3)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset2, TRUE, lapply(dataset3, NA2mean))
dataset2[] <- lapply(dataset3, NA2mean)
length(dataset2)
set.seed(11)
train_index <- sample(1:nrow(dataset3), 0.8*nrow(dataset3))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d2_norm <- as.data.frame(lapply(dataset3, normalize))
train_lm <- d2_norm[train_index,]
test_lm <- d2_norm[-train_index,]
# train_lm <- dataset2[train_index,]
# test_lm <- dataset2[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
rm(dataset2)
dataset2 <- dataset[,-c(1:5)]
dataset2[dataset2 == "?"] <- NA
dataset4 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","PctKids2Par","PctLargHouseFam",
"PctLargHouseOccup","PctHousLess3BR","MedNumBR","PctHousNoPhone","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop","arsonsPerPop")]
for (i in 1:length(dataset4)){
dataset4[,i] = data.frame(apply(dataset4[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset2, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d2_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d2_norm[train_index,]
test_lm <- d2_norm[-train_index,]
# train_lm <- dataset2[train_index,]
# test_lm <- dataset2[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset4, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d2_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d2_norm[train_index,]
test_lm <- d2_norm[-train_index,]
# train_lm <- dataset2[train_index,]
# test_lm <- dataset2[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
rm(train_lm,test_lm)
View(dataset4)
View(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d4_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d4_norm[train_index,]
test_lm <- d4_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
dataset4 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","PctKids2Par","PctLargHouseFam",
"PctLargHouseOccup","PctHousLess3BR","MedNumBR","PctHousNoPhone","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop","arsonsPerPop",
"ViolentCrimesPerPop")]
for (i in 1:length(dataset4)){
dataset4[,i] = data.frame(apply(dataset4[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset4, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d4_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d4_norm[train_index,]
test_lm <- d4_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
dataset4 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","PctLargHouseFam",
"PctLargHouseOccup","PctHousNoPhone","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop",
"ViolentCrimesPerPop")]
for (i in 1:length(dataset4)){
dataset4[,i] = data.frame(apply(dataset4[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset4, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d4_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d4_norm[train_index,]
test_lm <- d4_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
dataset4 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed",
"PctLargHouseOccup","PctHousLess3BR","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop",
"ViolentCrimesPerPop")]
for (i in 1:length(dataset4)){
dataset4[,i] = data.frame(apply(dataset4[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset4, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d4_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d4_norm[train_index,]
test_lm <- d4_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
dataset4 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop",
"ViolentCrimesPerPop")]
for (i in 1:length(dataset4)){
dataset4[,i] = data.frame(apply(dataset4[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset4, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d4_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d4_norm[train_index,]
test_lm <- d4_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
summary(lm_fit)
test_lm
length(test_lm)
y_hat <- predict(lm_fit, test_lm[,-9])
y_hat
y_y_hat <- data.frame("Predicted"= y_hat$ViolentCrimesPerPop, "Actual"=test_lm$ViolentCrimesPerPop, "Residul"
= residuls1)
residuls1 <- test_lm$ViolentCrimesPerPop-y_hat$ViolentCrimesPerPop
residuls1 <- test_lm$ViolentCrimesPerPop-y_hat
y_y_hat <- data.frame("Predicted"= y_hat, "Actual"=test_lm$ViolentCrimesPerPop, "Residul"
= residuls1)
y_y_hat
accuracy(y_hat, test_lm$ViolentCrimesPerPop)
library(knitr)
accuracy(y_hat, test_lm$ViolentCrimesPerPop)
library(forecast)
accuracy(y_hat, test_lm$ViolentCrimesPerPop)
install.packages("MLmetrics")
MSE_lm <- mse(test_lm,y_hat)
library(MLmetrics)
MSE_lm <- mse(test_lm,y_hat)
MSE_lm <- MLmetrics::mse(test_lm,y_hat)
sum(sm$residuals^2)
sm <- summary(lm_fit)
sum(sm$residuals^2)
mean(sm$residuals^2)
dataset5 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop",
"ViolentCrimesPerPop")]
for (i in 1:length(dataset5)){
dataset5[,i] = data.frame(apply(dataset5[i], 2, as.numeric))}
# replace NA with mean
NA_mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset5, TRUE, lapply(dataset5, NA_mean))
dataset5[] <- lapply(dataset5, NA_mean)
set.seed(11)
train_index <- sample(1:nrow(dataset5), 0.8*nrow(dataset5))
train_index1 <- sample(1:nrow(dataset5), 0.8*nrow(dataset5))
train_lm1 <- dataset5[train_index,]
test_lm1 <- dataset5[-train_index,]
lm_fit1 <- lm(ViolentCrimesPerPop ~ ., data = train_lm1)
sm1 <- summary(lm_fit1)
sse1 <- sum(sm1$residuals^2)
mse1 <- mean(sm1$residuals^2)
sm1
sse1
mse1
y_hat
y_y_hat <- data.frame("Predicted"= y_hat, "Actual"=test_lm$ViolentCrimesPerPop, "Residul"
= residuls1)
y_y_hat
denormalized <- function(x){
return (x) * (max(dataset4)-min(dataset4))+min(dataset4)
}
new_predict <- denormalized(y_hat)
new_predict
View(dataset4)
new_predict <- (y_hat)*(max(dataset4)-min(dataset4))+min(dataset4)
new_predict
new_predict <- (y_hat)*(max(dataset4ViolentCrimesPerPop)-min(dataset4ViolentCrimesPerPop))+min(dataset4ViolentCrimesPerPop)
new_predict
new_predict <- (y_hat)*(max(dataset4$ViolentCrimesPerPop)-min(dataset4$ViolentCrimesPerPop))+min(dataset4$ViolentCrimesPerPop)
new_predict
y_hat
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
sm <- summary(lm_fit)
sm
library(shiny); runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('IE6600 Projcet ML.R')
setwd("~/Desktop/Team1Shiny_Update/www")
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
testTxt
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
output$dataSet <- renderTable(
values$new
)
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
runApp('~/Desktop/Team1Shiny_Update/Untitled.R')
a <- data.frame(A=12, B=34)
a
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
data.frame(a)
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
View(dataset5)
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
runApp('~/Desktop/Team1Shiny_Update/IE6600 Projcet ML.R')
View(dataset2)
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Update/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
dataset <- read.csv("data/crimedata.csv",fileEncoding="latin1")
names(dataset)[1] <- "community"
#clean data
dataset2 <- dataset[,-c(1:5)]
dataset2[dataset2 == "?"] <- NA
dataset4 <- dataset2[,c("NumUnderPov","PctLess9thGrade","PctUnemployed","NumInShelters",
"PctBornSameState","rapesPerPop","robbbPerPop","assaultPerPop",
"ViolentCrimesPerPop")]
for (i in 1:length(dataset4)){
dataset4[,i] = data.frame(apply(dataset4[i], 2, as.numeric))}
library(zoo)
na.aggregate(dataset4)
# replace NA with mean
NA2mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
replace(dataset4, TRUE, lapply(dataset4, NA2mean))
dataset4[] <- lapply(dataset4, NA2mean)
length(dataset4)
set.seed(11)
train_index <- sample(1:nrow(dataset4), 0.8*nrow(dataset4))
normalize <- function(x){
return((x-min(x))/(max(x) - min(x)))
}
d4_norm <- as.data.frame(lapply(dataset4, normalize))
train_lm <- d4_norm[train_index,]
test_lm <- d4_norm[-train_index,]
lm_fit <- lm(ViolentCrimesPerPop ~ ., data = train_lm)
sm <- summary(lm_fit)
sse <- sum(sm$residuals^2)
mse <- mean(sm$residuals^2)
y_hat <- predict(lm_fit, test_lm[,-9])
residuls1 <- test_lm$ViolentCrimesPerPop-y_hat
y_y_hat <- data.frame("Predicted" = y_hat,
"Actual" =test_lm$ViolentCrimesPerPop,
"Residul" = residuls1)
new_predict <- (y_hat)*(max(dataset4$ViolentCrimesPerPop)-min(dataset4$ViolentCrimesPerPop))+min(dataset4$ViolentCrimesPerPop)
library(forecast)
accuracy(y_hat, test_lm$ViolentCrimesPerPop)
sm
mse
new_predict
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Downloads/exercise-6/exercise_6.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_V2/Team1Shiny.R')
install.packages(c("ISLR", "Metrics"))
runApp('~/Desktop/Team1Shiny_Final/Team1Shiny.R')
runApp('~/Desktop/Team1Shiny_Final/Team1Shiny.R')
runApp('~/Desktop/project-RShiny-Team1/project-RShiny-Team1.R')
runApp('~/Desktop/project-RShiny-Team1/project-RShiny-Team1.R')
